@page "/onedrivefiles01"
@inject HttpClient httpClient
@attribute [RenderModeServer]
@attribute [StreamRendering(true)]
<SmabPageTitle>OneDrive files reader 01</SmabPageTitle>

<div>
	<SmabButton CssClass="load-button" Title="Load text file" Text="Load text file" OnClick="async () => (fileContent, fileName) = await ReadFile(sharingLinks[0])" />
	<SmabButton CssClass="load-button" Title="Load json file" Text="Load json file" OnClick="async () => (fileContent, fileName) = await ReadFile(sharingLinks[1])" />
</div>

<h3>File contents</h3>

<p>Contents of the file: @fileName</p>
<pre>
	@fileContent
</pre>

@code {

	string[] sharingLinks = [
		// this is a text file
		@"https://v795qw.db.files.1drv.com/y4m2aECraclg5LRAQhk7vIANxbvzHpmtOXmsWzeyvNlkNDI-9YYOwj7zHdQsrYj8KEWf8aChO55i7yPBNkuBpDqRfEh5krgFutPKvEAEArb5tVOeRUJe2cUyeHrbAZCAFoIi2uVi-7Hdvua43NsIH8WlAfR7fohINgsTyDbjlUNovtgF8rtUj2VkSjhRaS1LleLk1NnR9p9L2K6GXf--WWSjw",
		// this is a json file
		@"https://pakrpq.db.files.1drv.com/y4mjU8yonEudZ2PwKo6sSp6lAukT1XU_kZX-5U3YQgD4t__DAM36O85NhufaHouy3BRQQNBgtDIiutIn5Lht1RdkDO_zV7dEHPNGVtIbrJeMHMaFydN-f-gR93xynMGoC2EGTpMpPbHsj5_5Ag0QU3zPukhTwCcbk65clvVNtdufXWSWwfYBLSz9vyVhs2mNU_0VmSuP3iPYJX6ixWSdweY5A",
	];

	private string? fileContent { get; set; }
	private string? fileName { get; set; } = "... not loaded ...";

	private async Task<ReadResponse> ReadFile(string url)
	{
		HttpResponseMessage response = await httpClient.GetAsync(url);
		string? content;
		string? name = "... not loaded ...";

		if (response.IsSuccessStatusCode) {
			content = await response.Content.ReadAsStringAsync();
			name = response.Content.Headers.ContentDisposition?.FileName;
			if (name is not null) {
				// strip the quotes from the name
				name = name[1..^1];
			}
			if (name is not null && name.EndsWith("json", StringComparison.InvariantCultureIgnoreCase)) {
				content = JsonPrettify(content);
			}
		} else {
			content = $"""Error: {response.StatusCode} - "{response.ReasonPhrase}" """;
			name = null;
		}

		return new ReadResponse(content, name);
	}

	private string JsonPrettify(string json)
	{
		JsonDocument jDoc = JsonDocument.Parse(json);
		return JsonSerializer.Serialize(jDoc, new JsonSerializerOptions { WriteIndented = true });
	}

	private record ReadResponse(string? Content, string? Name);

	private readonly string[] descConcepts = [
	];

	private readonly string[] descTechnologies = [
		"OneDrive",
		"HttpClient",
	];

}

<Description Technologies="@descTechnologies" Concepts="@descConcepts">
	<TextContent>
		<p>
			Reading shared files from a Personal OneDrive account.
		</p>
	</TextContent>
</Description>
