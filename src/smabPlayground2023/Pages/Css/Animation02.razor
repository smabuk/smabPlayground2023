@page "/css/animation02"
@attribute [RenderModeServer]
<SmabPageTitle>CSS Animation 02</SmabPageTitle>

<div>
	<ol>
		@foreach (var item in Movies) {
			<li draggable="true"
				class="@GenerateLiClass(item)">
				<div class="remove-button">
					<Confirm Title="Remove movie?"
							 ButtonCssClass="bi bi-trash trash"
							 ConfirmYes="async () => await Remove(item)">
						<MessageTemplate>
							<p><span>@item</span></p>
							<p>Are you sure you don’t want to see this movie any more?</p>
						</MessageTemplate>
					</Confirm>
				</div>
				<span>@item</span>
			</li>
		}
	</ol>
</div>


@code {
	private string? removeId = null;

	public List<string> Movies = [
		"Jaws",
		"The Terminator",
		"Star Wars",
		"Elemental",
		"Raiders of the Lost Ark",
		"Big",
		"Airplane II",
		"Groundhog Day",
		"Barbie",
		"Airplane",
		"Teenage Mutant Ninja Turtles",
	];

	private async Task Remove(string name)
	{
		removeId = name;

		await Task.Delay(500);

		Movies.Remove(name);
		removeId = null;
	}

	private string? GenerateLiClass(string name)
	{
		return (name == removeId) ? "hide shrink-height" : null;
	}

	private readonly string[] descConcepts = [
		"NO JavaScript",
		"css3",
		"Modal confirmation",
	];

	private readonly string[] descTechnologies = [
		"css3 animation",
		"bootstrap icons",
	];

}

<Description Technologies="@descTechnologies" Concepts="@descConcepts">
	<TextContent>
		<p>
			This page uses a button to prompt the user for a movie to delete, and then requests confirmation.
			It uses <code>animation-duration</code> and <code>transform: scale()</code> to shrink the item,
			and <code>transition</code> with <code>opacity</code> and a <code>duration</code> to hide it.
		</p>
		<p>
			By using <code>Task.Delay()</code> in the c# code we allow time for the animation to play out.
		</p>
	</TextContent>
</Description>
