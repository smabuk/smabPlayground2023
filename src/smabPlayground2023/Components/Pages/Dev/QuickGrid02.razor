@page "/dev/quickgrid02"
@using Microsoft.AspNetCore.Components.QuickGrid
@rendermode InteractiveServer

<SmabPageTitle>QuickGrid 02</SmabPageTitle>

@if (FilteredJournals is not null) {
	<div>
		<QuickGrid @ref="grid" Items="@FilteredJournals.AsQueryable()" RowClass="GetRowCssClass">
			<PropertyColumn Property="@(j => j.EntryNo)" Sortable="true" />
			<PropertyColumn Property="@(j => j.Date)"    Sortable="true" Format="yyyy-MM-dd" />
			<PropertyColumn Property="@(j => j.Title)"   Sortable="true" />
			<PropertyColumn Property="@(j => j.Version)" Sortable="true" />
			<PropertyColumn Property="@(j => j.Year)"    Sortable="true">
				<ColumnOptions>
					<label>
						<input type="checkbox" @bind="onlyRecent" @onclick="FilterChangedAsync" /> Recent only
					</label>
				</ColumnOptions>
			</PropertyColumn>
		</QuickGrid>
	</div>
}

@code {
	public record MovieJournal(int EntryNo, DateOnly Date, string Title, int Year, string? Version);

	QuickGrid<MovieJournal>? grid;
	bool onlyRecent = false;

	[PersistentState]
	public MovieJournal[]? MoviesList { get; set; }

	private IEnumerable<MovieJournal>? FilteredJournals =>
		onlyRecent
			? MoviesList?.Where(item => item.Year >= DateTime.Now.Year - 10)
			: MoviesList;

	public string[] Movies = [
		"Jaws",
		"The Terminator",
		"Star Wars",
		"Elemental",
		"Raiders of the Lost Ark",
		"Big",
		"Airplane II",
		"Groundhog Day",
		"Barbie",
		"Airplane",
		"Teenage Mutant Ninja Turtles",
	];

	protected override void OnInitialized()
	{
		DateOnly startDate = DateOnly.FromDateTime(DateTime.Now);
		MoviesList ??= [.. Enumerable.Range(1, 45).Select(index =>
		new MovieJournal(
			index,
			startDate.AddDays(0 - index),
			Movies[Random.Shared.Next(Movies.Length)],
			Random.Shared.Next(1963, DateTime.Now.Year),
			Random.Shared.Next(0, 5) == 3 ? "3D" : ""
		))];
	}

	private string GetRowCssClass(MovieJournal item)
		=> item.Year >= DateTime.Now.Year - 10 ? "recent" : "";

	private Task FilterChangedAsync() => grid!.RefreshDataAsync();

	private readonly string[] descConcepts = [
	   "State",
	];

	private readonly string[] descTechnologies = [
		"[PersistentState] attribute",
	];
}

<Description Technologies="@descTechnologies" Concepts="@descConcepts">
	<TextContent>
		<p>
			Using the new [PersistentState] attribute.
		</p>
	</TextContent>
</Description>
