<div class="slot"
		draggable="@(IsDraggable ? "true" : null)"
		error="@IsError"
		moving="@IsMoving"
		@ondragenter:preventDefault
		@ondragleave:preventDefault
		@ondragover:preventDefault
		@ondragstart = "() => OnDragStartCallback.InvokeAsync()"
		@ondragenter = "() => OnDragEnterCallback.InvokeAsync()"
		@ondragleave = "() => OnDragLeaveCallback.InvokeAsync()"
		@ondragover  = "() => OnDragOverCallback.InvokeAsync()"
		@ondragend   = "() => OnDragEndCallback.InvokeAsync()"
		@ondrop      = "() => OnDropCallback.InvokeAsync()"
		@onclick     = "() => OnClickCallback.InvokeAsync()">
	<div class="die">@DisplayLetter</div>
</div>

@code {
	[Parameter] public string? DisplayLetter { get; set; }

	[Parameter] public bool IsDraggable { get; set; } = false;
	[Parameter] public bool IsError     { get; set; } = false;
	[Parameter] public bool IsMoving    { get; set; } = false;

	[Parameter] public EventCallback OnDragStartCallback { get; set; }
	[Parameter] public EventCallback OnDragEnterCallback { get; set; }
	[Parameter] public EventCallback OnDragLeaveCallback { get; set; }
	[Parameter] public EventCallback OnDragOverCallback  { get; set; }
	[Parameter] public EventCallback OnDragEndCallback   { get; set; }
	[Parameter] public EventCallback OnDropCallback      { get; set; }
	[Parameter] public EventCallback OnClickCallback     { get; set; }
}
