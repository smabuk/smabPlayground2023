<div class="slot"
	 selected="@IsSelected"
	 error="@IsError"
		@oncontextmenu:preventDefault
		@onclick       = "() => OnClickCallback.InvokeAsync()"
		@oncontextmenu = "() => OnContextMenuCallback.InvokeAsync()">
	@if (ArrowDirection is not "" and not "NONE") {
		<div class="arrow" data-direction="@ArrowDirection"><i class="bi bi-arrow-up-circle-fill"></i></div>
	}
	<div class="inner-circle" selected="@IsSelected" blank="@Die?.IsBlank" data-rotation="@Die?.Orientation" @oncontextmenu:preventDefault>
		<div class="die" data-letter="@Die?.UpperFace.StringValue">@DieDisplay(Die)</div>
	</div>
</div>

@code {
	[Parameter] public LetterDie? Die { get; set; }

	[Parameter] public string ArrowDirection { get; set; } = "";
	[Parameter] public bool IsError     { get; set; } = false;
	[Parameter] public bool IsSelected  { get; set; } = false;

	[Parameter] public EventCallback OnClickCallback       { get; set; }
	[Parameter] public EventCallback OnContextMenuCallback { get; set; }

	/// <summary>
	/// 	Normal Unicode centre block doesn't work for Android
	/// 	so replace with "Black Square" 
	/// </summary>
	/// <param name="die"></param>
	/// <returns></returns>
	private string? DieDisplay(LetterDie? die) => die is null ? null : die.IsBlank ? "\u25a0" : die?.Display;
}
