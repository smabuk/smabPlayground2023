<div id="labyrinth">
	<div class="row">
		<button class="btn btn-primary" type="button" @onclick="() => StartNewGame()">@(gameOver ? "CONGRATULATIONS - New Game" : "New Game")</button>
	</div>
	@if(board is not null) {
		(int extraCardCol, int extraCardRow) = board.ExtraMazeCardPosition;
		<div id="board">
			@for (int col = -1; col < 8; col++) {
				@if (extraCardCol == col && extraCardRow == -1) {
					MazeCard mazeCard = board.ExtraMazeCard;
					<MazeCardPiece MazeCard="mazeCard" Extra/>
				} else {
					<div></div>
				}
			}
			@for (int row = 0; row < 7; row++) {
				@if (extraCardCol == -1 && extraCardRow == row) {
					MazeCard mazeCard = board.ExtraMazeCard;
					<MazeCardPiece MazeCard="mazeCard" Extra />
				} else {
					<div></div>
				}
				@foreach (MazeCard mazeCard in board.GetRow(row)) {
					@* <div class="arrow" data-direction="@ArrowDirection"><i class="bi bi-arrow-up-circle-fill"></i></div> *@
					<MazeCardPiece MazeCard="mazeCard" />
				}
				@if (extraCardCol == 7 && extraCardRow == row) {
					MazeCard mazeCard = board.ExtraMazeCard;
					<MazeCardPiece MazeCard="mazeCard" Extra />
				} else {
					<div></div>
				}
			}
			@for (int col = -1; col < 8; col++) {
				@if (extraCardCol == col && extraCardRow == 7) {
					MazeCard mazeCard = board.ExtraMazeCard;
					<MazeCardPiece MazeCard="mazeCard" Extra />
				} else {
					<div></div>
				}
			}

		</div>
	}
</div>

@code {
	LabyrinthBoard board = null!;
	List<TreasureCard> deck = null!;
	bool gameOver = false;

	void StartNewGame()
	{
		board = new();
		deck = [.. TreasureCardExtensions.GetShuffledDeck()];
	}
}
