<div id="labyrinth">
	<div class="row">
		<button class="btn btn-primary" type="button" @onclick="() => StartNewGame()">@(gameOver ? "CONGRATULATIONS - New Game" : "New Game")</button>
	</div>
	@if(board is not null) {
		<div id="board">
			@for (int col = 0; col < 9; col++) {
				<div></div>
			}
			@for (int row = 0; row < 7; row++) {
				<div></div>
				@foreach (MazeCard mazeCard in board.GetRow(row)) {
					@* <div class="arrow" data-direction="@ArrowDirection"><i class="bi bi-arrow-up-circle-fill"></i></div> *@
					<div data-directions="@PathDirections(mazeCard)">
						@if (mazeCard.HasExit("N")) {
							<span class="bi bi-arrow-up" aria-hidden="true"></span>
							<br />
						}
						@if (mazeCard.HasExit("W")) {
							<span class="bi bi-arrow-left" aria-hidden="true"></span>
						}
						@mazeCard.Name
						@if (mazeCard.HasExit("E")) {
							<span class="bi bi-arrow-right" aria-hidden="true"></span>
						}
						<br />
						@if (mazeCard.HasExit("S")) {
							<span class="bi bi-arrow-down" aria-hidden="true"></span>
						}
					</div>
				}
				<div></div>
			}
			@for (int col = 0; col < 9; col++) {
				<div></div>
			}

		</div>
	}
</div>

@code {
	LabyrinthBoard board = null!;
	bool gameOver = false;

	void StartNewGame()
	{
		board = new();
	}

	string PathDirections(MazeCard mazeCard)
	{
		return $"{(mazeCard.HasNorthExit() ? "N" : "")}{(mazeCard.HasEastExit() ? "E" : "")}{(mazeCard.HasSouthExit() ? "S" : "")}{(mazeCard.HasWestExit() ? "W" : "")}";
	}
}
